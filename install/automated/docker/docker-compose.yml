name: openvk

services:
  openvk:
    image: ghcr.io/openvk/openvk/openvk:latest
    container_name: openvk
    restart: unless-stopped
    ports:
      - 8080:80
    volumes:
      - openvk-storage:/opt/chandler/extensions/available/openvk/storage
      - openvk-audios:/opt/chandler/extensions/available/openvk/tmp/api-storage/audios
      - openvk-photos:/opt/chandler/extensions/available/openvk/tmp/api-storage/photos
      - openvk-videos:/opt/chandler/extensions/available/openvk/tmp/api-storage/videos
      - type: bind
        source: ./openvk.yml
        target: /opt/chandler/extensions/available/openvk/openvk.yml
        read_only: true
        bind:
          create_host_path: false
      - type: bind
        source: ./chandler.yml
        target: /opt/chandler/chandler.yml
        read_only: true
        bind:
          create_host_path: false
    depends_on:
      mariadb-primary:
          condition: service_healthy
      mariadb-eventdb:
          condition: service_healthy
      acl_handler:
          condition: service_started
      kafka:
          condition: service_started

  acl_handler:
    image: docker.io/alpine:edge
    container_name: acl_handler
    restart: unless-stopped
    entrypoint: /bin/sh
    command: -c "/bin/acl_handler.sh"
    volumes:
      - openvk-storage:/opt/chandler/extensions/available/openvk/storage
      - openvk-audios:/opt/chandler/extensions/available/openvk/tmp/api-storage/audios
      - openvk-photos:/opt/chandler/extensions/available/openvk/tmp/api-storage/photos
      - openvk-videos:/opt/chandler/extensions/available/openvk/tmp/api-storage/videos
      - type: bind
        source: ./acl_handler.sh
        target: /bin/acl_handler.sh
        read_only: true
        bind:
          create_host_path: false

  mariadb-primary:
    image: mariadb:10.9
    container_name: mariadb-primary
    restart: unless-stopped
    volumes:
      - mariadb-primary:/var/lib/mysql
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      - MARIADB_DATABASE=db
      - MARIADB_USER=openvk
      - MARIADB_PASSWORD=openvk
      - MARIADB_RANDOM_ROOT_PASSWORD=yes

  mariadb-eventdb:
    image: mariadb:10.9
    container_name: mariadb-eventdb
    restart: unless-stopped
    volumes:
      - mariadb-eventdb:/var/lib/mysql
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      - MARIADB_DATABASE=openvk_eventdb
      - MARIADB_USER=openvk
      - MARIADB_PASSWORD=openvk
      - MARIADB_RANDOM_ROOT_PASSWORD=yes

  kafka:
    image: docker.io/bitnami/kafka:3.2
    container_name: kafka
    restart: unless-stopped
    volumes:
      - kafka-data:/bitnami
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - KAFKA_CFG_NODE_ID=1

  phpmyadmin:
    image: docker.io/phpmyadmin:5
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - 8081:80
    environment:
      - PMA_HOST=mariadb-primary
      - PMA_USER=openvk
      - PMA_PASSWORD=openvk
      - PMA_PORT=3306
      - PMA_ARBITRARY=1

  adminer:
    image: docker.io/adminer:4
    container_name: adminer
    restart: unless-stopped
    ports:
      - 8082:8080
    environment:
      - ADMINER_DEFAULT_SERVER=mariadb-primary

volumes:
  openvk-storage:
  openvk-audios:
  openvk-photos:
  openvk-videos:
  openvk-logs:
  mariadb-primary:
  mariadb-eventdb:
  kafka-data:
